let fib_cache = [];

fn fib(n) {
  if n <= 1 { return n; };
  let a = fib_cache[n - 1];
  let b = fib_cache[n - 2];
  if !a {
    fib_cache[n - 1] = fib(n - 1);
    let a = fib_cache[n - 1];
  };
  if !b {
    fib_cache[n - 2] = fib(n - 2);
    let b = fib_cache[n - 2];
  };
  return a + b;
};

let counter = 0;
loop {
  println("fib(", counter, ") = ", fib(counter));
  let counter = counter + 1;
  if counter > 28 { break; };
}
